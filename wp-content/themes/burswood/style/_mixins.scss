$font: 'Arial', sans-serif;
$proxima: 'Proxima Nova', $font;
$path: '/burswood/php/wp-content/themes/burswood/';

$black: #1f282f;
$blue: #2d6496;
$orange: #ff971d;

@mixin declare-font-face($font-family, $font-filename, $font-weight : normal, $font-style :normal) {
    @font-face {
        font-family: '#{$font-family}';
        src: url('#{$path}style/fonts/#{$font-filename}.eot');
        src: url('#{$path}style/fonts/#{$font-filename}.eot?#iefix') format('embedded-opentype'),
            url('#{$path}style/fonts/#{$font-filename}.woff') format('woff'),
            url('#{$path}style/fonts/#{$font-filename}.woff2') format('woff2'),
            url('#{$path}style/fonts/#{$font-filename}.ttf') format('truetype'),
            url('#{$path}style/fonts/#{$font-filename}.svg##{$font-family}') format('svg');
        font-weight: $font-weight;
        font-style: $font-style
    }
}
@mixin svg-font-face($font-family, $font-filename, $font-weight : normal, $font-style :normal) {
    @font-face {
        font-family: '#{$font-family}';
        src: url('#{$path}style/fonts/#{$font-filename}.svg##{$font-family}') format('svg');
        font-weight: $font-weight;
        font-style: $font-style
    }
}
/* Usage
@include declare-font-face('FontName', 'font-filename', 400);

@media screen and (-webkit-min-device-pixel-ratio:0) {
@include svg-font-face('FontName', 'font-filename', 400);
}
*/
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -khtml-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}
@mixin box-sizing($s) {
    -webkit-box-sizing: $s;
    -moz-box-sizing: $s;
    -ms-box-sizing: $s;
    -o-box-sizing: $s;
    box-sizing: $s;
}
@mixin background-size($size) {
    -webkit-background-size: $size;
    -moz-background-size: $size;
    -ms-background-size: $size;
    -o-background-size: $size;
    background-size: $size;
    -ms-behavior: url(backgroundsize.min.htc);
}
@mixin box-shadow($shadow) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    box-shadow:$shadow;
}
@mixin transition($property: all, $duration: .5s, $easing: ease) {
    -webkit-transition: $property $duration $easing;
    -moz-transition: $property $duration $easing;
    -ms-transition: $property $duration $easing;
    -o-transition: $property $duration $easing;
    transition: $property $duration $easing;
}
@mixin position($position: relative, $top:0, $right:0, $bottom:0, $left:0) {
    position: $position;
    top: $top;
    right: $right;
    left: $left;
    bottom: $bottom;
}
@mixin transform($action, $backface: false) {
    @if $backface {
        -webkit-transform: $action;
        -moz-transform: $action;
        -ms-transform: $action;
        -o-transform: $action;
        transform: $action;
        -webkit-backface-visibility:hidden;
        backface-visibility:hidden;
    } @else {
        -webkit-transform: $action;
        -moz-transform: $action;
        -ms-transform: $action;
        -o-transform: $action;
        transform: $action;
    }
}
@mixin user-select($select) {
    -webkit-touch-callout: $select;
    -webkit-user-select: $select;
    -khtml-user-select: $select;
    -moz-user-select: $select;
    -ms-user-select: $select;
    user-select: $select;
}
@mixin scale($scale) {
    -webkit-transform: scale($scale);
    -moz-transform: scale($scale);
    -ms-transform: scale($scale);
    -o-transform: scale($scale);
    transform: scale($scale);
}
@mixin gradient( $start: #f1f1f1, $from: 0%, $stop: #d9d9d9, $to: 100% ) {
    background: $start;
    background: -webkit-gradient(linear, left top, left bottom, from(ie-hex-str($start)), to(ie-hex-str($stop)));
    background: -moz-linear-gradient(center top, $start $from, $stop $to);
    background: -moz-gradient(center top, $start $from, $stop $to);
    background: -webkit-linear-gradient(top, $start $from,$stop $to);
    background: -o-linear-gradient(top, $start $from,$stop $to);
    background: -ms-linear-gradient(top, $start $from,$stop $to);
    background: linear-gradient(to bottom, $start $from,$stop $to);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{ie-hex-str($start)}', endColorstr='#{ie-hex-str($stop)}',GradientType=0 );
}
@mixin cfx(){
    &:after {content:".";display:block;clear:both;visibility:hidden;line-height:0;height:0}
}
@mixin imagenize(){
    image-rendering: -moz-crisp-edges;
    image-rendering:   -o-crisp-edges;
    image-rendering: -webkit-optimize-contrast;
    image-rendering: crisp-edges;
    -ms-interpolation-mode: nearest-neighbor;
}
@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }
    @-moz-keyframes #{$name} {
        @content;
    }
    @-ms-keyframes #{$name} {
        @content;
    }
    @-o-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}
@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -ms-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str};
}
@mixin rgba($hexcolor, $opacity) {
    background-color: $hexcolor;
    background-color: rgba($hexcolor, $opacity);
}
